on: 
  workflow_dispatch:
    inputs:
      cluster-name: 
        description: 'cluster name. Used for dns-prefix and resource-group name'
        required: true
        default: 'btc-assignment'
        type: string
      deploy-nginx-ingress:
        type: boolean
        description: 'deploy nginx-ingress. Required for 200responder and bitcoin-fetcher to function'
        default: true

env:
  KUBECONFIG_PATH: ./aks-engine-output/kubeconfig/kubeconfig.northeurope.json


name: create-and-configure-cluster
jobs:
  create-cluster:
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Checkout
      uses: actions/checkout@v1

    - name: Create Cluster
      uses: azure/CLI@v1
      with:
        azcliversion: 2.42.0
        inlineScript: |
          curl -o get-akse.sh https://raw.githubusercontent.com/Azure/aks-engine/master/scripts/get-akse.sh
          chmod 700 get-akse.sh
          ./get-akse.sh
          aks-engine deploy --location northeurope --api-model ./kubernetes/kubernetes.json -g ${{ github.event.inputs.cluster-name }} -p ${{ github.event.inputs.cluster-name }} -o "./aks-engine-output"
          kube_config_data=$(cat ${{ env.KUBECONFIG_PATH }} | base64 -w 0)
          echo $kube_config_data #TODO: remove
          echo "::add-mask::$kube_config_data"
          echo "KUBE_CONFIG=$kube_config_data" >> $GITHUB_ENV

    - name: Upload Kubeconfig
      uses: gliech/create-github-secret-action@v1
      with:
        name: KUBE_CONFIG
        value: ${{ env.KUBE_CONFIG }}
        pa_token: ${{ secrets.GH_TOKEN }}
  
  call-nginx-ingress-deploy:
    uses: ./.github/workflows/deploy-nginx-ingress.yaml
    if: ${{ github.event.inputs.deploy-nginx-ingress  == 'true' }} 
    needs: create-cluster